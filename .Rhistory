install.packages("data.table")
library(shiny); runApp('app xiaofei.r')
runApp('app xiaofei.r')
runApp('app xiaofei.r')
runApp('app xiaofei.r')
runApp()
install.packages(c("caret", "e1071"))
runApp('app_hyt.R')
runApp('app_hyt.R')
runApp('app_hyt.R')
runApp('app_hyt.R')
runApp('app_hyt.R')
runApp()
install.packages("hablar")
runApp('~/WeChat Files/blaze1997/FileStorage/File/2020-04/tyt_CouponProject/SwimMap-master/appyating.R')
runApp('~/WeChat Files/blaze1997/FileStorage/File/2020-04/tyt_CouponProject/SwimMap-master/appyating.R')
library(ggplot2)
library(ggplot2)
runApp('~/WeChat Files/blaze1997/FileStorage/File/2020-04/tyt_CouponProject/SwimMap-master/appyating.R')
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(dplyr)
library(stringr)
library(hablar)
library(scales)
###offline data processing
offline %>%
filter(offline$Date_received != 'null' & offline$Coupon_id != 'null') -> getcpOffline
getcpOffline %>% count(Discount_rate) -> a
redeemed_offline %>% count(Discount_rate) -> b
merge(a, b, by = 'Discount_rate') -> result_Offline
result_Offline$use_rate <- result_Offline$n.y/result_Offline$n.x
names(result_Offline)[3] <- 'redNum'
names(result_Offline)[2] <- 'getcpNum'
ratio1 <- lapply(result_Offline$Discount_rate,function(x){
re <- unlist(str_split(x,":"))
if(re > 1){
r <- as.numeric(re[2])/as.numeric(re[1])
}
else{
r <- 1-as.numeric(re)
}
})
result_Offline$discount_percent_off <- unlist(ratio1)
sorted_discountOff <- result_Offline[order(result_Offline$discount_percent_off),]
sorted_discountOff$discount_percent_off <- percent(sorted_discountOff$discount_percent_off)
sorted_discountOff$discount_percent_off <- as.factor(sorted_discountOff[["discount_percent_off"]])
###online data processing
online %>%
filter(online$Date_received != 'null' & online$Coupon_id != 'null') -> getcpOnline
getcpOnline %>% count(Discount_rate) -> a
redeemed_online %>% count(Discount_rate) -> b
merge(a, b, by = 'Discount_rate') -> result_Online
result_Online$use_rate <- result_Online$n.y/result_Online$n.x
names(result_Online)[3] <- 'redNum'
names(result_Online)[2] <- 'getcpNum'
ratio <- lapply(result_Online$Discount_rate,function(x){
re <- unlist(str_split(x,":"))
r <- as.numeric(re[2])/as.numeric(re[1])
})
result_Online$discount_percent_off <- unlist(ratio)
sorted_discount <- result_Online[order(result_Online$discount_percent_off),]
sorted_discount$discount_percent_off <- percent(sorted_discount$discount_percent_off)
sorted_discount$discount_percent_off <- as.factor(sorted_discount[["discount_percent_off"]])
###function
UseRateCouponRatecol <- function(discount_col = c('20%','10%'),
type = "offline"){
resptyt <- ggplot()
##offline part
if (type=="offline"){
percent_offline <- data.frame()
for (i in discount_col){
percent_offline <- rbind(percent_offline,
sorted_discountOff[sorted_discountOff$discount_percent_off == i,])
}
percent_offline <- na.omit(percent_offline)
resptyt <- resptyt+
geom_col(data = percent_offline, mapping = aes(x = Discount_rate, y=use_rate))+
facet_wrap( ~ discount_percent_off, nrow = 2)+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount rate")+
ylab("Coupon Use Rate")
}
###online part
else{
percent_online <- data.frame()
for (i in discount_col){
percent_online <- rbind(percent_online,
sorted_discount[sorted_discount$discount_percent_off == i,])
}
percent_online <- na.omit(percent_online)
resptyt<- resptyt +
geom_col(data = percent_online, mapping = aes(x = Discount_rate, y=use_rate))+
facet_wrap( ~ discount_percent_off, nrow = 2)+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount rate")+
ylab("Coupon Use Rate")
}
return(resptyt)
}
UseRateCouponRatebox <- function(discount_box = c('1%','17%','5%', '67%'), type = 'offline'){
resptyt <- ggplot()
if(type == 'offline'){
if(is.na(discount_box)){
resptyt <- resptyt +
geom_boxplot(data = sorted_discountOff, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
else{
discount_offline <- data.frame()
for (i in discount_box){
discount_offline <- rbind(discount_offline,
sorted_discountOff[sorted_discountOff$discount_percent_off == i,])
}
discount_offline <- na.omit(discount_offline)
resptyt <- resptyt+
geom_boxplot(data = discount_offline, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
}
else{
if(is.na(discount_box)){
resptyt <- resptyt +
geom_boxplot(data = sorted_discount, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
else{
discount_online <- data.frame()
for (i in discount_box){
discount_online <- rbind(discount_online,
sorted_discount[sorted_discount$discount_percent_off == i,])
}
discount_online <- na.omit(discount_online)
resptyt <- resptyt +
geom_boxplot(data = discount_online, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
}
return(resptyt)
}
UseRateCouponRatecol(discount_col = c('20%','10%','5%'),
type = "offline")
UseRateCouponRatebox(discount_box = c('20%','10%','5%'),
type = "offline")
library(ggplot2)
library(tidyverse)
library(dplyr)
library(stringr)
library(hablar)
library(scales)
###offline data processing
offline<-read.csv('ccf_offline_stage1_train.csv', header = T, na.strings = NA)
offline<-data.frame(offline)
offline %>%
filter(offline$Date != 'null' & offline$Coupon_id != 'null') -> redeemed_offline
redeemed_offline$Date <- as.Date(redeemed_offline[["Date"]], "%Y%m%d")
redeemed_offline$Date_received <- as.Date(redeemed_offline[["Date_received"]], "%Y%m%d")
redeemed_offline$RedeemDays <- redeemed_offline$Date - redeemed_offline$Date_received
###online data processing
online<-read.csv('ccf_online_stage1_train.csv', header = T, na.strings = NA)
online<-data.frame(online)
online %>%
filter(online$Date != 'null' & online$Coupon_id != 'null') -> redeemed_online
redeemed_online$Date <- as.Date(redeemed_online[["Date"]], "%Y%m%d")
redeemed_online$Date_received <- as.Date(redeemed_online[["Date_received"]], "%Y%m%d")
redeemed_online$RedeemDays <- redeemed_online$Date - redeemed_online$Date_received
redeemtime <- function(range = c(0, 50), type = "offline"){
resptyt <- ggplot()
#judge type first
#offline part
if (type=="offline"){
red<-filter(redeemed_offline,redeemed_offline$RedeemDays>=range[1] &
redeemed_offline$RedeemDays<=range[2])##redeem days range filter
resx<-red$RedeemDays
}
else{
red <- filter(redeemed_online,redeemed_online$RedeemDays>=range[1] &
redeemed_online$RedeemDays<=range[2])
resx <- red$RedeemDays
}
###Calculating part end
##Output part
#res<-data.frame(resx)
#names(res) <- c("resx")
resptyt<-resptyt+stat_bin(data = red,aes(x=resx))
m <- layer_data(resptyt)
resptyt<-resptyt + stat_smooth(data = m, aes(x, y))+
xlab("Redeem Days")
return(resptyt)
}
redeemtime(range= c(0,50),type = "offline")
runApp('~/WeChat Files/blaze1997/FileStorage/File/2020-04/tyt_CouponProject/SwimMap-master/appyating.R')
library(ggplot2)
library(tidyverse)
library(dplyr)
library(stringr)
library(hablar)
library(scales)
###offline data processing
offline %>%
filter(offline$Date_received != 'null' & offline$Coupon_id != 'null') -> getcpOffline
getcpOffline %>% count(Discount_rate) -> a
redeemed_offline %>% count(Discount_rate) -> b
merge(a, b, by = 'Discount_rate') -> result_Offline
result_Offline$use_rate <- result_Offline$n.y/result_Offline$n.x
names(result_Offline)[3] <- 'redNum'
names(result_Offline)[2] <- 'getcpNum'
ratio1 <- lapply(result_Offline$Discount_rate,function(x){
re <- unlist(str_split(x,":"))
if(re > 1){
r <- as.numeric(re[2])/as.numeric(re[1])
}
else{
r <- 1-as.numeric(re)
}
})
result_Offline$discount_percent_off <- unlist(ratio1)
sorted_discountOff <- result_Offline[order(result_Offline$discount_percent_off),]
sorted_discountOff$discount_percent_off <- percent(sorted_discountOff$discount_percent_off)
sorted_discountOff$discount_percent_off <- as.factor(sorted_discountOff[["discount_percent_off"]])
###online data processing
online %>%
filter(online$Date_received != 'null' & online$Coupon_id != 'null') -> getcpOnline
getcpOnline %>% count(Discount_rate) -> a
redeemed_online %>% count(Discount_rate) -> b
merge(a, b, by = 'Discount_rate') -> result_Online
result_Online$use_rate <- result_Online$n.y/result_Online$n.x
names(result_Online)[3] <- 'redNum'
names(result_Online)[2] <- 'getcpNum'
ratio <- lapply(result_Online$Discount_rate,function(x){
re <- unlist(str_split(x,":"))
r <- as.numeric(re[2])/as.numeric(re[1])
})
result_Online$discount_percent_off <- unlist(ratio)
sorted_discount <- result_Online[order(result_Online$discount_percent_off),]
sorted_discount$discount_percent_off <- percent(sorted_discount$discount_percent_off)
sorted_discount$discount_percent_off <- as.factor(sorted_discount[["discount_percent_off"]])
###function
UseRateCouponRatecol <- function(discount_col = c('20%','10%'),
type = "offline"){
resptyt <- ggplot()
##offline part
if (type=="offline"){
percent_offline <- data.frame()
for (i in discount_col){
percent_offline <- rbind(percent_offline,
sorted_discountOff[sorted_discountOff$discount_percent_off == i,])
}
percent_offline <- na.omit(percent_offline)
resptyt <- resptyt+
geom_col(data = percent_offline, mapping = aes(x = Discount_rate, y=use_rate))+
facet_wrap( ~ discount_percent_off, nrow = 2)+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount rate")+
ylab("Coupon Use Rate")
}
###online part
else{
percent_online <- data.frame()
for (i in discount_col){
percent_online <- rbind(percent_online,
sorted_discount[sorted_discount$discount_percent_off == i,])
}
percent_online <- na.omit(percent_online)
resptyt<- resptyt +
geom_col(data = percent_online, mapping = aes(x = Discount_rate, y=use_rate))+
facet_wrap( ~ discount_percent_off, nrow = 2)+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount rate")+
ylab("Coupon Use Rate")
}
return(resptyt)
}
UseRateCouponRatebox <- function(discount_box = c('1%','17%','5%', '67%'), type = 'offline'){
resptyt <- ggplot()
if(type == 'offline'){
if(is.na(discount_box)){
resptyt <- resptyt +
geom_boxplot(data = sorted_discountOff, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
else{
discount_offline <- data.frame()
for (i in discount_box){
discount_offline <- rbind(discount_offline,
sorted_discountOff[sorted_discountOff$discount_percent_off == i,])
}
discount_offline <- na.omit(discount_offline)
resptyt <- resptyt+
geom_boxplot(data = discount_offline, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
}
else{
if(is.na(discount_box)){
resptyt <- resptyt +
geom_boxplot(data = sorted_discount, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
else{
discount_online <- data.frame()
for (i in discount_box){
discount_online <- rbind(discount_online,
sorted_discount[sorted_discount$discount_percent_off == i,])
}
discount_online <- na.omit(discount_online)
resptyt <- resptyt +
geom_boxplot(data = discount_online, mapping = aes(x = discount_percent_off, y = use_rate))+
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5))+
xlab("Discount Percent Off of Coupon")+
ylab("Coupon Use Rate")
}
}
return(resptyt)
}
UseRateCouponRatecol(discount_col = c('20%','10%','5%'),
type = "offline")
UseRateCouponRatebox(discount_box = c('20%','10%','5%'),
type = "offline")
runApp('~/WeChat Files/blaze1997/FileStorage/File/2020-04/tyt_CouponProject/SwimMap-master/appyating.R')
runApp('appyating.R')
runApp()
View(redeemed_offline)
runApp()
shiny::runApp()
